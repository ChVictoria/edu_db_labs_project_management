(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{666:function(t,r,e){t.exports=e.p+"assets/img/Programming_cycle.cb11d0e1.png"},667:function(t,r,e){t.exports=e.p+"assets/img/Waterfall_model.49ef183e.jpg"},668:function(t,r,e){t.exports=e.p+"assets/img/Agile_model.7d8e9005.jpg"},669:function(t,r,e){t.exports=e.p+"assets/img/scrum.3675a43d.jpg"},670:function(t,r,e){t.exports=e.p+"assets/img/v-model.b05c3d9e.jpg"},671:function(t,r,e){t.exports=e.p+"assets/img/Kanban.58053b0c.png"},710:function(t,r,e){"use strict";e.r(r);var _=e(47),v=Object(_.a)({},(function(){var t=this,r=t.$createElement,_=t._self._c||r;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"аналіз-предметноі-області"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#аналіз-предметноі-області"}},[t._v("#")]),t._v(" Аналіз предметної області")]),t._v(" "),_("h2",{attrs:{id:"вступ"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#вступ"}},[t._v("#")]),t._v(" Вступ")]),t._v(" "),_("p",[t._v("Даний документ містить "),_("font",{attrs:{color:"dodgerblue"}},[_("strong",[_("em",[t._v("аналіз сучасних способів вирішення поставленого завдання")])])]),t._v(", у ньому розглядаються основні етапи життєвого циклу програмного забезпечення, кейси використання тої чи іншої методології розробки ПЗ, їхні переваги та недоліки, також наводиться "),_("font",{attrs:{color:"dodgerblue"}},[_("strong",[_("em",[t._v("порівняльна характеристика існуючих систем управління проектами")])])]),t._v(", щоб визначити, чого в них не вистачає, що є зайвим, які характеристики можна покращити та що має бути реалізовано в нашій системі.")],1),t._v(" "),_("h2",{attrs:{id:"основні-визначення"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#основні-визначення"}},[t._v("#")]),t._v(" Основні визначення")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://nt.ua/blog/methodology-of-project-management#:~:text=%D0%9C%D0%B5%D1%82%D0%BE%D0%B4%D0%BE%D0%BB%D0%BE%D0%B3%D1%96%D1%8F%20%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D1%96%D0%BD%D0%BD%D1%8F%20%D0%BF%D1%80%D0%BE%D1%94%D0%BA%D1%82%D0%B0%D0%BC%D0%B8%20%E2%80%93%20%D1%86%D0%B5%20%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B0,%D1%86%D0%B8%D0%BA%D0%BB%20%D0%BF%D1%80%D0%BE%D1%94%D0%BA%D1%82%D1%83%20%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D1%8C%D0%BD%D0%BE%20%D1%81%D1%82%D1%80%D1%83%D0%BA%D1%82%D1%83%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%BC%D0%B8%20%D0%B5%D1%82%D0%B0%D0%BF%D0%B0%D0%BC%D0%B8.",target:"_blank",rel:"noopener noreferrer"}},[t._v("Методологія управління проєктами"),_("OutboundLink")],1),t._v(" – це практика або техніка, яка допоможе вам успішно керувати проєктом і виконувати його. Вона описує, як взятися за проєкт і як виконати покрокові інструкції щодо його завершення. Крім того, вона обмежує життєвий цикл проєкту правильно структурованими етапами.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://www.encyclopedia.com/books/educational-magazines/software-development-models#:~:text=Software%20development%20models%20are%20formal,lost%20favor%20in%20different%20eras.",target:"_blank",rel:"noopener noreferrer"}},[t._v("Моделі розробки програмного забезпечення"),_("OutboundLink")],1),t._v(" — це формальні методи організації та управління процесом створення програмного забезпечення. Велика їх частина - це і є методології управління проєктами.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://icstudio.online/post/etapi-zhittyevogo-ciklu-rozrobki-pz",target:"_blank",rel:"noopener noreferrer"}},[t._v("Життєвий цикл розробки програмного забезпечення"),_("OutboundLink")],1),t._v(" (SDLC - Software Development Life Cycle) — це послідовність кроків розробки, необхідних для створення проекту, від його первинної ідеї до виходу продукту на ринок і подальшої його підтримки.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://thedigitalprojectmanager.com/projects/pm-methodology/project-management-methodologies-made-simple/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Lean"),_("OutboundLink")],1),t._v(' —  з англ. "ощадливий", це методологія управління проектами, зосереджена на ефективності, тобто на досягненні більшого з меншими витратами.')]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/%D0%9C%D1%96%D0%BD%D1%96%D0%BC%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE_%D0%B6%D0%B8%D1%82%D1%82%D1%94%D0%B7%D0%B4%D0%B0%D1%82%D0%BD%D0%B8%D0%B9_%D0%BF%D1%80%D0%BE%D0%B4%D1%83%D0%BA%D1%82",target:"_blank",rel:"noopener noreferrer"}},[t._v("MVP, мінімально життєздатний продукт"),_("OutboundLink")],1),t._v(" (англ. Minimum viable product — MVP) — продукт з мінімальним функціоналом, який можна дати користувачам для використання.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/%D0%A1%D0%BA%D1%80%D0%B0%D0%BC",target:"_blank",rel:"noopener noreferrer"}},[t._v("Scrum"),_("OutboundLink")],1),t._v(' (англ. "штовханина; сутичка") — підхід управління проєктами для гнучкої розробки програмного забезпечення, де робиться акцент на якісному контролі процесу розробки.Підхід вперше описали Гіротака Такеучі та Ікуджіро Нонака в статті The New New Product Development Game (Гарвардський Діловий Огляд, січ-лют 1986). Вони відзначили, що проєкти, над якими працюють невеликі, крос-функціональні команди, зазвичай систематично продукують кращі результати, і пояснили це, як «підхід регбі». У регбі scrum - сутичка, в якій м\'яч вкидається між двома групами із восьми гравців, і ті намагаються вибороти його, відштовхуючи групу супротивника.')]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/%D0%A1%D0%BA%D1%80%D0%B0%D0%BC#cite_note-5",target:"_blank",rel:"noopener noreferrer"}},[t._v("Спринт"),_("OutboundLink")],1),t._v(" (англ. sprint -  ривок; кидок; біг на коротку дистанцію) — у scrum-методології 15-30 денний період (тривалість визначається командою), протягом якого працівники створюють функціональний ріст програмного забезпечення.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/%D0%A1%D0%BA%D1%80%D0%B0%D0%BC#cite_note-5",target:"_blank",rel:"noopener noreferrer"}},[t._v("Product backlog"),_("OutboundLink")],1),t._v(" — це документ, який має список вимог до функціональності, які упорядковані згідно зі ступенем важливості. Product backlog представляє список того, що повинно бути реалізовано.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://buklib.net/books/34104/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Предметна сфера"),_("OutboundLink")],1),t._v(" — це сукупність продуктів і послуг, вироб­ництво яких повинно бути забезпечене в рамках здійснюваного проекту.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/%D0%9A%D0%B5%D1%80%D1%83%D0%B2%D0%B0%D0%BD%D0%BD%D1%8F_%D1%87%D0%B0%D1%81%D0%BE%D0%BC",target:"_blank",rel:"noopener noreferrer"}},[t._v("Тайм-менеджмент, керування часом"),_("OutboundLink")],1),t._v(" (англ. Time-management) — сукупність методик оптимальної організації часу для виконання поточних задач, проектів та календарних подій. Типовими підходами в керуванні часом є постановка пріоритетів, розбиття великих завдань та проектів на окремі дії та делегування іншим людям.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://deltahost.ua/ua/tipi-merezhevix-protokoliv-i-ih-priznachennya-http-ip-ssh-ftp-pop3-mac.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Мережевий протокол"),_("OutboundLink")],1),t._v(" — це комплекс установок, завдяки яким визначається і регулюється процес інформаційного обміну між комп’ютерами, підключеними до інтернету.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/Rational_Unified_Process",target:"_blank",rel:"noopener noreferrer"}},[t._v("RUP"),_("OutboundLink")],1),t._v(" (англ. Rational Unified Process - RUP) — процес розробки програмного забезпечення створений Rational Software - підрозділом американської корпорації-виробника комп’ютерів - IBM.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/%D0%9E%D0%BF%D0%B5%D1%80%D0%B0%D1%82%D0%BE%D1%80%D0%B8_%D1%96%D0%BD%D0%BA%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D1%83_%D1%82%D0%B0_%D0%B4%D0%B5%D0%BA%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D1%83",target:"_blank",rel:"noopener noreferrer"}},[t._v("Інкремент"),_("OutboundLink")],1),t._v(" (лат. Incrementum - зростання) — операція збільшення значення змінної, найчастіше на 1.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/%D0%86%D1%82%D0%B5%D1%80%D0%B0%D1%86%D1%96%D1%8F",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ітерація"),_("OutboundLink")],1),t._v(" (лат. Iteratio - повторювання) — повторне застосування математичної операції для вирішення задачі; повторний виклик функції в програмному коді тощо.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://git-scm.com/book/uk/v2/%D0%92%D1%81%D1%82%D1%83%D0%BF-%D0%9F%D1%80%D0%BE-%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D1%83-%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%BE%D0%BB%D1%8E-%D0%B2%D0%B5%D1%80%D1%81%D1%96%D0%B9",target:"_blank",rel:"noopener noreferrer"}},[t._v("Система керування версіями"),_("OutboundLink")],1),t._v(" — це система, що записує зміни у файл або набір файлів протягом деякого часу, щоб користувач мав змогу повертатися до певних раніших версій свого проєкту.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/%D0%A0%D0%B5%D0%BF%D0%BE%D0%B7%D0%B8%D1%82%D0%BE%D1%80%D1%96%D0%B9_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE_%D0%B7%D0%B0%D0%B1%D0%B5%D0%B7%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%BD%D1%8F",target:"_blank",rel:"noopener noreferrer"}},[t._v("Репозиторій"),_("OutboundLink")],1),t._v(" (англ. repository - сховище) — спеціальний сервер, на якому зберігається програмне забезпечення і документи разом з історією їх зміни та іншою службовою інформацією. Найчастіше дані в репозиторії зберігаються у вигляді файлів, доступних для завантаження і подальшого розповсюдження по мережі.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/%D0%93%D0%BD%D1%83%D1%87%D0%BA%D0%B0_%D1%80%D0%BE%D0%B7%D1%80%D0%BE%D0%B1%D0%BA%D0%B0_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE_%D0%B7%D0%B0%D0%B1%D0%B5%D0%B7%D0%BF%D0%B5%D1%87%D0%B5%D0%BD%D0%BD%D1%8F",target:"_blank",rel:"noopener noreferrer"}},[t._v("Гнучка́ розро́бка програ́много забезпе́чення"),_("OutboundLink")],1),t._v(" (англ. Agile software development, agile-методи) — клас методологій розробки програмного забезпечення, що базується на ітеративній розробці, в якій вимоги та розв'язки еволюціонують через співпрацю між багатофункціональними командами здатними до самоорганізації; засіб для підвищення продуктивності розробників програмного забезпечення.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/Transport_Layer_Security",target:"_blank",rel:"noopener noreferrer"}},[t._v("TLS"),_("OutboundLink")],1),t._v(" (англ. Transport Layer Security — захист на транспортному рівні), як і його попередник SSL — криптографічний протокол, що надає можливості безпечної передачі даних в інтернеті для навігації, отримання пошти, спілкування, обміну файлами, тощо.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/Unified_Modeling_Language",target:"_blank",rel:"noopener noreferrer"}},[t._v("UML"),_("OutboundLink")],1),t._v(" (англ. Unified Modeling Language) — це мова графічного опису для об'єктного моделювання в галузі розроблення програмного забезпечення, моделювання бізнес-процесів, системного проектування та відображення організаційних структур.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/%D0%9F%D1%80%D0%B8%D0%BA%D0%BB%D0%B0%D0%B4%D0%BD%D0%B8%D0%B9_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BD%D0%B8%D0%B9_%D1%96%D0%BD%D1%82%D0%B5%D1%80%D1%84%D0%B5%D0%B9%D1%81",target:"_blank",rel:"noopener noreferrer"}},[t._v("API"),_("OutboundLink")],1),t._v(" (англ. Application Programming Interface - прикладний програмний інтерфейс) — набір визначень підпрограм, протоколів взаємодії та засобів для створення програмного забезпечення; набір чітко визначених методів для взаємодії різних компонентів. Використовується для веб-базованих систем, операційних систем, баз даних, апаратного забезпечення, програмних бібліотек.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/%D0%90%D1%80%D1%82%D0%B5%D1%84%D0%B0%D0%BA%D1%82_(UML)",target:"_blank",rel:"noopener noreferrer"}},[t._v("Артефакт"),_("OutboundLink")],1),t._v(" (англ. artifact) — в UML окремий шматок інформації, що використовується чи з'являється в процесі розробки програмного забезпечення, наприклад файл з кодом, модель, частина документації, чи повідомлення електронної пошти тощо. На відміну від компонентів і класів, артефакти — це фізичні сутності, які розміщуються у фізичних вузлах (девайсах або середовищах розробки).")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/%D0%91%D0%B0%D0%B3%D0%B0%D1%82%D0%BE%D0%BF%D0%BB%D0%B0%D1%82%D1%84%D0%BE%D1%80%D0%BC%D0%BD%D1%96%D1%81%D1%82%D1%8C",target:"_blank",rel:"noopener noreferrer"}},[t._v("Кросплатформність, багатоплатформність"),_("OutboundLink")],1),t._v(" —  властивість програмного забезпечення працювати більш ніж на одній програмній/операційній системі або апаратній платформі; технології, що дозволяють досягти такої властивості.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/FAQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("FAQ"),_("OutboundLink")],1),t._v(" (англ. Frequently Asked Questions) — підбірка часто задаваних питань на певну тему та відповідей на них, яка створюється для вільного доступу до інформації користувачами та економії часу розробників системи.")]),t._v(" "),_("h2",{attrs:{id:"підходи-та-способи-вирішення-завдання"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#підходи-та-способи-вирішення-завдання"}},[t._v("#")]),t._v(" Підходи та способи вирішення завдання")]),t._v(" "),_("h3",{attrs:{id:"опис-моделеи-та-методологіи-розроблення-пз"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#опис-моделеи-та-методологіи-розроблення-пз"}},[t._v("#")]),t._v(" Опис моделей та методологій розроблення ПЗ")]),t._v(" "),_("p",[t._v("Створення якісного продукту в IT починається з визначення його життєвого циклу. Це є приблизно однакові етапи, якими проходить вся розробка програмного забезпечення.\nДо них відносять:")]),t._v(" "),_("ul",[_("li",[t._v("Планування;")]),t._v(" "),_("li",[t._v("Аналіз вимог;")]),t._v(" "),_("li",[t._v("Проектування;")]),t._v(" "),_("li",[t._v("Розробка;")]),t._v(" "),_("li",[t._v("Тестування і налагодження;")]),t._v(" "),_("li",[t._v("Технічна підтримка.\n"),_("img",{attrs:{src:e(666),alt:"Цикл розробки ПЗ",title:"Цикл розробки ПЗ"}})])]),t._v(" "),_("p",[t._v("Проте для полегшення організації роботи над проектом, існують різні методології, які чітко визначають процес розробки ПЗ."),_("a",{attrs:{href:"https://icstudio.online/post/etapi-zhittyevogo-ciklu-rozrobki-pz",target:"_blank",rel:"noopener noreferrer"}},[t._v("[1]"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("Вибір моделі розроблення ПЗ є важливим етапом у розробці будь-якого проекту. Нижче перераховані деякі причини, для чого потрібно обирати модель розроблення ПЗ:")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("Якість продукту:")]),t._v(" Вибір правильної моделі дозволяє розробникам зосередитися на ключових етапах розробки, що забезпечує високу якість продукту;")]),t._v(" "),_("li",[_("strong",[t._v("Строки виконання проекту:")]),t._v(" Вибір правильної моделі дозволяє розробникам планувати свій час так, щоб вони могли виконувати проект у відповідний термін;")]),t._v(" "),_("li",[_("strong",[t._v("Ефективність використання ресурсів:")]),t._v(" Вибір правильної моделі дозволяє зменшити витрати на ресурси (час, гроші, людські ресурси) та збільшити їх ефективність.")]),t._v(" "),_("li",[_("strong",[t._v("Відповідність вимогам клієнта:")]),t._v(" Вибір правильної моделі дозволяє розробникам виконувати вимоги клієнта та забезпечувати задоволеність клієнта продуктом;")]),t._v(" "),_("li",[_("strong",[t._v("Прозорість процесу розробки:")]),t._v(" Вибір правильної моделі дозволяє розробникам зрозуміти процес розробки та контролювати кожен етап.")])]),t._v(" "),_("h3",{attrs:{id:"приклади-моделеи-розроблення-пз"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#приклади-моделеи-розроблення-пз"}},[t._v("#")]),t._v(" Приклади моделей розроблення ПЗ")]),t._v(" "),_("h4",{attrs:{id:"каскадна-або-водоспадна-модель-waterfall-model-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#каскадна-або-водоспадна-модель-waterfall-model-2"}},[t._v("#")]),t._v(" "),_("strong",[_("em",[t._v("Каскадна або водоспадна модель (waterfall model)")])]),_("a",{attrs:{href:"https://evergreens.com.ua/ua/articles/software-development-metodologies.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("[2]"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("Це є одна із найстаріших моделей розробки ПЗ. Основна суть моделі Waterfall у тому, що етапи залежать один від одного і наступний починається, коли завершений попередній, утворюючи таким чином поступальний (каскадний) рух уперед.")]),t._v(" "),_("p",[t._v("Паралелізм етапів у каскадній моделі, хоч і обмежений, але можливий для абсолютно незалежних між собою робіт. При цьому інтеграція паралельних частин все одно відбувається на якомусь наступному етапі, а не в рамках одного.")]),t._v(" "),_("p",[t._v("Команди різних етапів між собою не комунікують, кожна команда відповідає чітко за свій етап.")]),t._v(" "),_("p",[_("strong",[t._v("Недоліками цієї моделі є")]),t._v(" отримання результату по проходженню всіх етапів і складність виявлення помилок. Повертатися назад важко. Не зрозуміло що повертати: якщо стався збій на якомусь етапі, його наслідки видно тільки в кінці.")]),t._v(" "),_("p",[t._v("Для замовників дана модель виглядає лінійно і з боку досить просто: за завершеним етапом проектування слідує програмування, а потім тестування - і так крок за кроком поки не буде досягнута фінальна точка і мета, заради якої ведеться розробка.")]),t._v(" "),_("p",[t._v("Однак уявлення про простоту каскадної моделі є ілюзорним. Воно з'являється через обмежене бачення клієнтом всього процесу, адже дана модель не має на увазі залучення замовника в деталі процесів розробки і демонструє зрозумілий і кінцевий результат роботи тільки на контрольних точках і в кінці проекту.")]),t._v(" "),_("p",[t._v("У реальності каскадну модель не можна назвати простою, на практиці нею складно керувати. Внесення замовником значних змін під час процесу розробки по waterfall або спрацьовування серйозних, непередбачених проектом ризиків несуть руйнівний характер для всього процесу - модель доводиться перебудовувати, графіки перепланувати.")]),t._v(" "),_("p",[_("img",{attrs:{src:e(667),alt:"Цикл розробки ПЗ",title:"Цикл розробки ПЗ"}})]),t._v(" "),_("h4",{attrs:{id:"інкрементна-модель-incremental-model-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#інкрементна-модель-incremental-model-3"}},[t._v("#")]),t._v(" "),_("strong",[_("em",[t._v("Інкрементна модель (incremental model)")])]),_("a",{attrs:{href:"https://wezom.com.ua/ua/blog/metodologija-razrabotki-programmnogo-obespechenija",target:"_blank",rel:"noopener noreferrer"}},[t._v("[3]"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("Інкрементна модель розробки програмного забезпечення підходить у тому випадку, якщо "),_("strong",[t._v("є чіткий план дій")]),t._v(", але продукт потрібно запустити досить швидко, а зміни можна буде вносити потім. Її суть полягає в тому, що спочатку розробляється план дій та сегментується на невеликі завдання. Далі кожен блок розробляється за традиційною каскадною моделлю. Спочатку робиться «базовий» продукт з мінімальними, але важливими функціями. Поступово він доповнюється завдяки розробці інших компонентів, які називаються інкрементами. "),_("strong",[t._v("Процес зациклюється")]),t._v(", доки не буде повністю зібраної єдиної системи.")]),t._v(" "),_("p",[t._v("Кожна частина роботи в такому проекті є готовим елементом. Іноді його можна використовувати окремо. Як правило, він розробляється таким чином, щоб потім його не переробляти. Саме тому й використовується каскадна модель всередині інкрементної моделі.")]),t._v(" "),_("p",[t._v("Що пропонує така методологія розробки програмного забезпечення? Насамперед, мінімізуються ризики, забезпечується швидкий реліз та запуск продукту. Крім того, базовий функціонал вже працюватиме й приноситиме користь для бізнесу, а за необхідності завжди можна впровадити нові сформовані інструменти.")]),t._v(" "),_("h4",{attrs:{id:"ітеративна-або-ітераціина-модель-iterative-model-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ітеративна-або-ітераціина-модель-iterative-model-3"}},[t._v("#")]),t._v(" "),_("strong",[_("em",[t._v("Ітеративна або ітераційна модель (iterative model)")])]),_("a",{attrs:{href:"https://wezom.com.ua/ua/blog/metodologija-razrabotki-programmnogo-obespechenija",target:"_blank",rel:"noopener noreferrer"}},[t._v("[3]"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("Такий підхід за своєю конструкцією дещо нагадує попередній. Суть ітеративної методології розробки програмного забезпечення полягає в тому, щоб "),_("strong",[t._v("створити базовий функціонал та поступово його покращувати")]),t._v(". Поки що звучить схоже з попереднім варіантом, але є різниця.")]),t._v(" "),_("p",[t._v("Інкрементну модель можна порівняти з пазлом, де всі елементи викладаються один за одним й поступово збираються до єдиної картинки.")]),t._v(" "),_("p",[t._v("Такий метод підходить для великих проектів, у якому визначаються основні завдання та є загальне уявлення, що має вийти. "),_("strong",[t._v("Але при цьому деталі не зрозумілі, не до кінця зрозуміло, як працюватиме та чи інша функція")]),t._v(". За таким методом розробляються, наприклад, соціальні мережі, великі корпоративні платформи. Загальний функціонал зрозумілий, але кількість функцій та можливості не визначені до кінця. Такий підхід дозволяє поступово додавати нові компоненти та покращувати наявні.")]),t._v(" "),_("h4",{attrs:{id:"спіральна-модель-spiral-model-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#спіральна-модель-spiral-model-3"}},[t._v("#")]),t._v(" "),_("strong",[_("em",[t._v("Спіральна модель (spiral model)")])]),_("a",{attrs:{href:"https://wezom.com.ua/ua/blog/metodologija-razrabotki-programmnogo-obespechenija",target:"_blank",rel:"noopener noreferrer"}},[t._v("[3]"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("Усі етапи життєвого циклу при спіральної моделі "),_("strong",[t._v("йдуть витками, на кожному з яких відбуваються проектування, кодування, дизайн, тестування")]),t._v(". Такий процес відображає суть назви: піднімаючись, проходиться один виток (цикл) спіралі для досягнення кінцевого результату. Причому не обов'язково, що один і той же набір процесів буде повторяться від витка до витка. Але "),_("strong",[t._v("результати кожного з витків ведуть до головної мети")]),t._v(".")]),t._v(" "),_("h4",{attrs:{id:"гнучка-модель-agile-model-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#гнучка-модель-agile-model-2"}},[t._v("#")]),t._v(" "),_("strong",[_("em",[t._v("Гнучка модель (agile model)")])]),_("a",{attrs:{href:"https://evergreens.com.ua/ua/articles/software-development-metodologies.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("[2]"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("strong",[t._v("Основні ідеї Agile:")])]),t._v(" "),_("ul",[_("li",[t._v("Люди і взаємодія важливіші за процеси та інструменти;")]),t._v(" "),_("li",[t._v("Працюючий продукт важливіший за вичерпну документацію;")]),t._v(" "),_("li",[t._v("Співпраця з замовником важливіше узгодження умов контракту;")]),t._v(" "),_("li",[t._v("Готовність до змін важливіше проходження попереднім планом.")])]),t._v(" "),_("p",[t._v("Один з принципів - "),_("strong",[t._v("взаємодія")]),t._v(" - має на увазі, що замовник взаємодіє з командою, команда з замовником - усі між собою. Це дозволяє обмінюватися досвідом між учасниками команди і клієнтом, і кожному з них впливати на прийняття рішень. За рахунок такого підходу знижуються ризики втрати часу і грошей і підвищується здатність команди вирішувати складні нестандартні завдання з високим ступенем невизначеності.")]),t._v(" "),_("p",[t._v("Однак взаємодії всіх і з усіма можуть вилитися у хаос, що впливає на всі сфери розробки. Тому використовуючи Agile "),_("strong",[t._v("потрібно розуміти обмеження:")]),t._v(" команди повинні бути невеликі, учасники повинні бути компетентні та мотивовані, ітерації короткі з максимально зрозумілими цілями, встановлені чіткі обмеження за часом і кінцевий результат повинен бути очевидним.")]),t._v(" "),_("p",[t._v("Agile чудово справляється з невизначеністю, зумовлюючи майбутнє на більш короткий період. Правило таке: чим вища невизначеність - тим коротша ітерація, причому її тривалість може бути навіть у рамках 24 годин, як і відбувається на хакатоні. На початку кожної ітерації неминуче виконується контроль, ретроспектива, оцінка та аналіз результатів, планування наступної ітерації.")]),t._v(" "),_("p",[_("strong",[t._v("У внутрішньому плануванні та у продуктовій розробці без цього принципу й елементів Agile не обійтися.")])]),t._v(" "),_("p",[_("img",{attrs:{src:e(668),alt:"Гнучка модель",title:"Гнучка модель"}})]),t._v(" "),_("h4",{attrs:{id:"lean-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#lean-2"}},[t._v("#")]),t._v(" "),_("strong",[_("em",[t._v("Lean")])]),_("a",{attrs:{href:"https://evergreens.com.ua/ua/articles/software-development-metodologies.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("[2]"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("Ідея підходу Lean полягає в тому, що ми "),_("strong",[t._v("ощадливо ставимося до ресурсів (у тому числі часу) і вирішуємо завдання найпростішим способом")]),t._v(".")]),t._v(" "),_("p",[t._v("Коли доходить до розробки продукту, або робиться якесь поліпшення, виробниче або інженерне, ми спочатку робимо його MVP (minimum viable product). MVP - така версія продукту, що виконує свою головну функцію і при цьому її не відхиляють клієнти і визнають її корисність. Звичайно, її можна покращувати і покращувати, але загалом продукт на стадії MVP повинен бути корисним, зрозумілим клієнтові і таким, щоб можна було прийняти рішення про його подальших поліпшень або визнати експеримент невдалим і тестувати нову гіпотезу, витративши при цьому якомога менше ресурсів.")]),t._v(" "),_("p",[t._v("Загалом Lean підхід "),_("strong",[t._v("орієнтується на тестування потреб і цінностей і потрапляння в очікування ринку мінімальними засобами")]),t._v('. Lean-підхід не про "технічні" проблеми і їхні рішення інженерними засобами, а про '),_("strong",[t._v("підприємницькому підході до вирішення завдань")]),t._v(". Lean передбачає, що команда шукає найпростіше рішення для досягнення результату: технічно, організаційно, спрощуючи все, що не є дійсно важливим.")]),t._v(" "),_("h4",{attrs:{id:"scrum-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#scrum-4"}},[t._v("#")]),t._v(" "),_("strong",[_("em",[t._v("SCRUM")])]),_("a",{attrs:{href:"https://brander.ua/blog/skram-shcho-tse-take-ta-yak-tsym-korystuvatysya",target:"_blank",rel:"noopener noreferrer"}},[t._v("[4]"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("strong",[t._v("Scrum")]),t._v(" — одна з найпопулярніших гнучких методологій розробки програмного забезпечення з сімейства Agile.")]),t._v(" "),_("p",[_("strong",[t._v("Особливості Scrum")])]),t._v(" "),_("p",[t._v("Scrum методологія ґрунтується на понятті спринту (sprint), протягом якого виконується робота над продуктом. Перед початком кожного спринту проводиться планування (Sprint Planning), на якому проводиться оцінка вмісту списку завдань із розвитку продукту (Product Backlog) і формування беклога на спринт (Sprint Backlog), у рамках яких і діє команда. Для спринту завжди існують обмеження по часу, зазвичай від тижня до місяця. Життя продукту таким чином розбита на рівні по тривалості спринти.")]),t._v(" "),_("p",[t._v("Робота над проектом розбивається на невеликі підзадачі. Команда з 5-7 осіб виконує кожну з них у фіксований термін (1-4 тижні).Протягом роботи над одним підзавданням проводиться 5 типів нарад.Отриманий результат роботи над кожним підзавданням має цінність для замовника.")]),t._v(" "),_("p",[_("img",{attrs:{src:e(669),alt:"Особливості",title:"Особливості"}})]),t._v(" "),_("p",[_("strong",[t._v("Плюси")])]),t._v(" "),_("p",[t._v("1.Гнучкість. Scrum — просто ідеальна система управління проектами, які ростуть і масштабуються, а це буквально будь-яка мобільна або веб-додаток, і навіть сайти. Сьогодні ви додали нову функцію, подивилися, як вона працює, і вже у наступному спринті можете почати її вдосконалювати, міняти чи прибрати.")]),t._v(" "),_("p",[t._v("2.Видимі результати. Підсумок кожного спринту — щось реальне. Нова функція або виправлення помилки не так важливо, як можливість бачити, що робота йде, і йде успішно.")]),t._v(" "),_("p",[_("strong",[t._v("Мінуси")])]),t._v(" "),_("p",[t._v("1.Мотивація. Хотіти дотримуватися принципів Agile і робити це насправді — дві великі різниці.Тільки від скрам-майстра залежить, чи працюватиме Scrum для команди. Зробити так, щоб співробітники якщо не дружили, то поважали один одного, та розуміли важливість спільної роботи, може бути дуже складно.")]),t._v(" "),_("p",[t._v("2.Невідповідність мети та інструменту. Scrum безумовно хороший для багатьох завдань, навіть не пов'язаних із розробкою. Але, при цьому, всі методології сімейства Agile об'єднує не просто терпимість, а любов до змін. Якщо вашому проекту заявлена ​​гнучкість ні до чого, та ви впевнені, що точно знаєте, як має виглядати проект від початку й до кінця, краще вибрати класичне проектне управління, що буде значно ефективнішим.")]),t._v(" "),_("h4",{attrs:{id:"rup-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#rup-2"}},[t._v("#")]),t._v(" "),_("strong",[_("em",[t._v("RUP")])]),_("a",{attrs:{href:"https://evergreens.com.ua/ua/articles/software-development-metodologies.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("[2]"),_("OutboundLink")],1)]),t._v(" "),_("p",[_("strong",[t._v("RUP")]),t._v("(Rational Unified Process) - розробка продукту за даним методом складається з чотирьох фаз (початкова стадія, уточнення, побудова, впровадження), кожна з яких включає в себе одну або декілька ітерацій. RUP величезна методологія, котру важко описати одним абзацом тексту, але методи, рекомендовані RUP засновані на статистиці комерційно успішних проектів.")]),t._v(" "),_("p",[t._v("RUP використовує ітеративну модель розробки. В кінці кожної ітерації (в ідеалі що триває від 2 до 6 тижнів) проектна команда повинна досягти запланованих на дану ітерацію цілей, створити або допрацювати проектні артефакти і отримати проміжну, але функціональну версію кінцевого продукту. Ітеративний підхід розробки дозволяє швидко реагувати на зміни вимог, виявляти і усувати ризики на ранніх стадіях проекту, а також ефективно контролювати якість створюваного продукту.")]),t._v(" "),_("h4",{attrs:{id:"v-подібна-модель-v-model-5"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#v-подібна-модель-v-model-5"}},[t._v("#")]),t._v(" "),_("strong",[_("em",[t._v("V-подібна модель (V-model)")])]),_("a",{attrs:{href:"https://qalight.ua/baza-znaniy/v-model-v-model/",target:"_blank",rel:"noopener noreferrer"}},[t._v("[5]"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("V-модель – це покращена версія класичної каскадної моделі. Тут "),_("strong",[t._v("на кожному етапі відбувається контроль поточного процесу")]),t._v(", для того, щоб переконатися в можливості переходу на наступний рівень. У цій моделі тестування починається ще зі стадії написання вимог, причому для кожного наступного етапу передбачений свій рівень тестового покриття.")]),t._v(" "),_("p",[t._v("У V-моделі "),_("strong",[t._v("кожному етапу проектування і розробки системи відповідає окремий рівень тестування")]),t._v(". Тут процес розробки представлений низхідною послідовністю в лівій частині умовної літери V, а стадії тестування – на її правому ребрі. Відповідність етапів розробки і тестування показано горизонтальними лініями.")]),t._v(" "),_("p",[_("strong",[t._v("Плюси")])]),t._v(" "),_("ul",[_("li",[t._v("строга етапність;")]),t._v(" "),_("li",[t._v("планування тестування і верифікація системи виробляються на ранніх етапах;")]),t._v(" "),_("li",[t._v("покращений, в порівнянні з каскадної моделлю, тайм-менеджмент;")]),t._v(" "),_("li",[t._v("проміжне тестування")])]),t._v(" "),_("p",[_("strong",[t._v("Мінуси")])]),t._v(" "),_("ul",[_("li",[t._v("недостатня гнучкість моделі;")]),t._v(" "),_("li",[t._v("власне створення програми відбувається на етапі написання коду, тобто вже в середині процесу розробки;")]),t._v(" "),_("li",[t._v("недостатній аналіз ризиків;")]),t._v(" "),_("li",[t._v("немає роботи з паралельними подіями і можливості динамічного внесення змін")])]),t._v(" "),_("p",[_("img",{attrs:{src:e(670),alt:"V-model",title:"V-model"}})]),t._v(" "),_("h4",{attrs:{id:"kanban-6"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#kanban-6"}},[t._v("#")]),t._v(" "),_("strong",[_("em",[t._v("Kanban")])]),_("a",{attrs:{href:"https://www.management.com.ua/qm/qm259.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("[6]"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("Це "),_("strong",[t._v("концепція підтримки безперервного потоку завдань та їх ефективного виконання завдяки максимальній ефективності роботи команди")]),t._v(". Водночас команді ніколи не дається більше роботи, ніж вона здатна виконати. Якщо просто: ви складаєте список завдань, а люди їх виконують.")]),t._v(" "),_("p",[t._v("Kanban має два основні принципи:")]),t._v(" "),_("ul",[_("li",[t._v("візуалізації роботи;")]),t._v(" "),_("li",[t._v("обмеження кількості завдань “у процесі”.")])]),t._v(" "),_("p",[_("strong",[t._v("Переваги Kanban")])]),t._v(" "),_("ul",[_("li",[t._v("підвищення ефективності роботи. Оскільки співробітники не чекають, поки їм дадуть роботу, а відразу по завершенню завдання беруть інше, немає простою.")]),t._v(" "),_("li",[t._v("краща взаємодія в команді. Члени команди завжди в курсі того, хто чим займається та як рухається проєкт — все це є на дошці.")]),t._v(" "),_("li",[t._v("висока гнучкість. Kanban — це дуже гнучка методологія. Ви можете додавати та скасовувати завдання в будь-який момент.")]),t._v(" "),_("li",[t._v("скорочення часу на обговорення та наради. Скільки члени команди мають безперервний потік завдань, менше часу витрачається на планування.")])]),t._v(" "),_("p",[_("strong",[t._v("Недоліки Kanban")])]),t._v(" "),_("ul",[_("li",[t._v("може миттєво загальмувати. Щоб усе чітко працювало, ви повинні мати добре налаштовані процеси, і кожен у команді має знати, що входить у його роботу.")]),t._v(" "),_("li",[t._v("вимагає постійної наявності завдань, як на конвеєрі.")]),t._v(" "),_("li",[t._v("немає часових обмежень. В Kanban немає строків, "),_("strong",[t._v("для виконання завдання дається стільки часу, скільки потрібно")]),t._v(". Це може створити проблеми з дедлайнами проєкту.")]),t._v(" "),_("li",[t._v("можна “втратити” задачі з високим пріоритетом.")])]),t._v(" "),_("p",[_("img",{attrs:{src:e(671),alt:"Kanban",title:"Kanban"}})]),t._v(" "),_("h2",{attrs:{id:"порівняльна-характеристика-існуючих-засобів-вирішення-завдання"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#порівняльна-характеристика-існуючих-засобів-вирішення-завдання"}},[t._v("#")]),t._v(" Порівняльна характеристика існуючих засобів вирішення завдання")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://github.com/features/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github projects"),_("OutboundLink")],1),t._v(" - ця таблиця інтегрується з проблемами та запитами на злиття (pull requests) на платформі Github, щоб допомогти ефективно планувати та відстежувати роботу. Вона має можливість створювати кілька варіантів відображення, де ви можете фільтрувати, сортувати та групувати проблеми та запити(pull requests), додавати поля для відстеження метаданих, специфічних для кожної команди, і візулізувати роботу за допомогою діаграм.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://www.atlassian.com/ru/software/jira",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jira"),_("OutboundLink")],1),t._v(" - один з найвідоміших та найпопулярніших таск-менеджерів. У всьому світі його використовують майже 20% команд. Jira – це хмарний сервіс для управління проектами, який містить величезну кількість інструментів. Він складається з трьох основних розділів: проекти (задачі, баги та запити), проблеми (списки помилок) та робочий процес (послідовність кроків). Jira добре вписується в Agile-методологію управління проектами.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://worksection.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Worksection"),_("OutboundLink")],1),t._v(" -  український онлайн-сервіс управління проектами. Його легко інтегрувати із сервісами Google, будь-якою CRM-системою, Slack та Telegram. На сьогоднішній день понад 1000 компаній використовують Worksection для керування своїми проектами. Сервіс Worksection підходить для різних типів бізнесу: діджитал-агентств, веб-студій, компаній відео-продакшену та ін.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://asana.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Asana"),_("OutboundLink")],1),t._v(" - це популярний таск-менеджер, який має як веб-версію так і мобільний додаток, і включає безліч функцій для ефективного контролю робочого процесу. Asana можна використовувати для Agile-методологій або керувати робочими проектами як своїми особистими задачами.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://trello.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Trello"),_("OutboundLink")],1),t._v(" - це простий у використанні хмарний сервіс для спільної роботи над проектами, який підійде для невеликих проектів та команд. Як і Jira, належить Atlassian. Trello дозволяє організувати вашу роботу на Канбан-дошках, які є його основними складовими. На сьогоднішній день у світі налічується понад 50 мільйонів користувачів Trello.")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://monday.com/lang/ru/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Monday.com"),_("OutboundLink")],1),t._v(" - це хмарний сервіс управління проектами, що дозволяє командам ефективно контролювати робочий процес. Іноді користувачі називають його чудовою альтернативою Microsoft Project Manager. Monday.com підходить для Agile-методологій, для різних команд та проектів.")]),t._v(" "),_("h2",{attrs:{id:"порівняльна-таблиця"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#порівняльна-таблиця"}},[t._v("#")]),t._v(" Порівняльна таблиця")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("Вимоги")]),t._v(" "),_("th",[t._v("Критерії")]),t._v(" "),_("th",[t._v("Github Projects")]),t._v(" "),_("th",[t._v("Jira")]),t._v(" "),_("th",[t._v("Worksection")]),t._v(" "),_("th",[t._v("Asana")]),t._v(" "),_("th",[t._v("Trello")]),t._v(" "),_("th",[t._v("Monday.com")]),t._v(" "),_("th",[t._v("Just Chill (наш проект)")])])]),t._v(" "),_("tr",[_("td",{attrs:{rowspan:"7"}},[t._v("Функціональні (Functional)")]),t._v(" "),_("td",[t._v("Безкоштовна версія")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("14d (10$/m)➖")]),t._v(" "),_("td",[t._v("30d (11$/m)➖")]),t._v(" "),_("td",[t._v("30d (8$/m)➖")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",[t._v("Scrum/Kanban boards")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",[t._v("Наявність API")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",[t._v("Кросплатформеність (Crossplatform)")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",[t._v("Управління ресурсами (Resource management)")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",[t._v("Візуалізація прогресу (графіки, діаграми)")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➖")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕➖")])]),t._v(" "),_("tr",[_("td",[t._v("Можливості комунікації між учасниками проекту")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",{attrs:{rowspan:"5"}},[t._v("Зручність (Convenience)")]),t._v(" "),_("td",[t._v("Багатомовність")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",[t._v("Mobile App")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕➖")])]),t._v(" "),_("tr",[_("td",[t._v("Інтеграція з Github, Slack")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",[t._v("User-friendly interface")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➖")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",[t._v("Hot keys")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➖")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",{attrs:{rowspan:"2"}},[t._v("Надійність (Reliability)")]),t._v(" "),_("td",[t._v("Резервне копіювання")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕➖")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",[t._v("Протокол шифрування")]),t._v(" "),_("td",[t._v("SSL")]),t._v(" "),_("td",[t._v("TLS")]),t._v(" "),_("td",[t._v("SSL")]),t._v(" "),_("td",[t._v("TLS")]),t._v(" "),_("td",[t._v("TLS")]),t._v(" "),_("td",[t._v("SSL")]),t._v(" "),_("td",[t._v("SSL")])]),t._v(" "),_("tr",[_("td",{attrs:{rowspan:"3"}},[t._v("Продуктивність (Productivity)")]),t._v(" "),_("td",[t._v("Час відповіді сервера (Server Response Time)")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",[t._v("Синхронізація в реальному часі")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",[t._v("Стійкість до збоїв")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",{attrs:{rowspan:"3"}},[t._v("Підтримка (Support)")]),t._v(" "),_("td",[t._v("FAQ")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")])]),t._v(" "),_("tr",[_("td",[t._v("Онлайн служба підтримки")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➖")])]),t._v(" "),_("tr",[_("td",[t._v("Частота впроваджень нових функцій")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➕")]),t._v(" "),_("td",[t._v("➖")])])]),t._v(" "),_("h2",{attrs:{id:"висновки"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#висновки"}},[t._v("#")]),t._v(" Висновки")]),t._v(" "),_("p",[t._v("Проаналізувавши існуюче програмне забезпечення для автоматизації управління проєктами, можна зробити висновок, що ті з них, які мають широкий функціонал, часто незручні у використанні через заплутаний або незрозумілий інтерфейс, інші, з user-friendly інтерфейсом, пропонують обмежений функціонал, за допомогою якого складно контролювати великі проекти. Також існуючі системи в основному орієнтовані на конкретну методологію управління проектами (Agile/Scrum) та не такі гнучкі, як хотілося б.")]),t._v(" "),_("p",[t._v("Тож наша мета створення більш зручного для адаптації користувачів з різних сфер діяльності, гнучкого та мультифункціонального інструменту для допомоги управлінням проектами є цілком оправданою.")]),t._v(" "),_("h2",{attrs:{id:"посилання"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#посилання"}},[t._v("#")]),t._v(" Посилання")]),t._v(" "),_("ol",[_("li",[_("a",{attrs:{href:"https://icstudio.online/post/etapi-zhittyevogo-ciklu-rozrobki-pz",target:"_blank",rel:"noopener noreferrer"}},[t._v("Етапи життєвого циклу ПЗ"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://evergreens.com.ua/ua/articles/software-development-metodologies.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Моделі життєвого циклу ПЗ"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://wezom.com.ua/ua/blog/metodologija-razrabotki-programmnogo-obespechenija",target:"_blank",rel:"noopener noreferrer"}},[t._v("Методології розробки ПЗ"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://uk.wikipedia.org/wiki/%D0%A1%D0%BA%D1%80%D0%B0%D0%BC#cite_note-5",target:"_blank",rel:"noopener noreferrer"}},[t._v("Scrum"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://brander.ua/blog/skram-shcho-tse-take-ta-yak-tsym-korystuvatysya",target:"_blank",rel:"noopener noreferrer"}},[t._v("Методології розробки Scrum"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://training.qatestlab.com/blog/technical-articles/popular-software-development-life-cycles/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Популярні життєві цикли розробки ПЗ"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://www.management.com.ua/qm/qm259.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kanban vs Scrum"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://www.slidesalad.com/product/v-model-powerpoint-template-diagrams/",target:"_blank",rel:"noopener noreferrer"}},[t._v("V-model"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://worksection.com/ua/blog/5-project-management-tools.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Існуючі засоби вирішення завдання"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://habr.com/ru/company/yougile/blog/489754/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Можливості сучасних систем управління проектами"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=v.exports}}]);